1. Activate connection pool in conf.xml
```
                <parameter name="pool.2.name" value="pool-2"/>
                <parameter name="pool.2.properties.dataSourceClassName" value="org.mariadb.jdbc.MariaDbDataSource"/>
		            <parameter name="pool.2.properties.dataSource.url" value="jdbc:mariadb://154.0.175.99:3306/hub_config"/>

		            <parameter name="pool.2.properties.dataSource.user" value="root"/>
                <parameter name="pool.2.properties.dataSource.password" value="###########"/>
                <parameter name="pool.2.properties.maximumPoolSize" value="10"/>
                <parameter name="pool.2.properties.registerMbeans" value="false"/>

```
2. Make entry in startup.xml for  jar file
```
	<dependency>
        <groupId>mariadb</groupId>
        <artifactId>mariadb-connector</artifactId>
        <version>3.4.1</version>
        <relativePath>mariadb-java-client-3.4.1.jar</relativePath>
      </dependency>
      
      <dependency>
        <groupId>jasper</groupId>
        <artifactId>jasperreports-fonts</artifactId>
        <version>6.13.0</version>
        <relativePath>jasperreports-fonts-6.13.0.jar</relativePath>
</dependency>

<dependency>
        <groupId>jasper</groupId>
        <artifactId>javascript</artifactId>
        <version>1.7.2</version>
        <relativePath>javascript-1.7.2.jar</relativePath>
</dependency>

<dependency>
        <groupId>jasper</groupId>
        <artifactId>kwantu-reports</artifactId>
        <version>1.0.0</version>
        <relativePath>gs.jar</relativePath>
</dependency>

<dependency>
        <groupId>jasper</groupId>
        <artifactId>jasperreports-metadata</artifactId>
        <version>6.13.0</version>
        <relativePath>jasperreports-metadata-6.13.0.jar</relativePath>
</dependency>

 <dependency>
        <groupId>jasper</groupId>
        <artifactId>jasperreports-javaflow</artifactId>
        <version>6.13.0</version>
        <relativePath>jasperreports-javaflow-6.13.0.jar</relativePath>
</dependency>

 <dependency>
        <groupId>jasper</groupId>
        <artifactId>jasperreports-functions</artifactId>
        <version>6.13.0</version>
        <relativePath>jasperreports-functions-6.13.0.jar</relativePath>
</dependency>

 <dependency>
        <groupId>jasper</groupId>
        <artifactId>jasperreports</artifactId>
        <version>6.13.0</version>
        <relativePath>jasperreports-6.13.0.jar</relativePath>
      </dependency>
```
3. Place  jar file in lib directory
```
jasperreports-6.13.0.jar 
jasperreports-fonts-6.13.0.jar 
jasperreports-functions-6.13.0.jar 
jasperreports-javaflow-6.13.0.jar 
jasperreports-metadata-6.13.0.jar 
javascript-1.7.2.jar
mariadb-java-client-3.4.1.jar
gs.jar
and many more jars.....


   sudo dnf install https://li.nux.ro/download/nux/dextop/el8/x86_64/nux-dextop-release-0-1.el8.nux.noarch.rpm
   wget https://sourceforge.net/projects/mscorefonts2/files/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm
   sudo dnf install ./msttcore-fonts-installer-2.6-1.noarch.rpm
   sudo fc-cache -fv
   fc-list | grep -i arial

```


4. Activate org.exist.collections.triggers.XQueryStartupTrigger trigger in conf.xml
5. Copy startup.xq in /db/system/autostart collection
6. enable java binding



--------------------------------------
eXist migration changes
--------------------------------------
1. In below syntax, ":=" is no longer supported, hence change it to ":" only

Example below needs to be changes
map {
"key" := "value"
}
to
map {
"key" : "value"
}


2. map:new function is deprecated, hence we need to change this to map:merge.


3. We implemented hub-specific schema implementation for MySQL for which the following changes are done/needed.

  3.1 Older schema changed to new schema name
  ----------------------------------------
  mobile1_8 		to 		kwantu_txn_data 
  activities 		to 		kwantu_txn_data  
  payments 		to 		kwantu_txn_data_sef
  mobile1_8 		to 		kwantu_txn_data_sef
  activities 		to 		kwantu_txn_data_sef 
  sefsitemanager	to		kwantu_etl_data_sef 

  3.2 Any hub-specific schema will follow same schema names followed by "_<hub-code>". eg. kwantu_txn_data_sef. 
  But for this any change in the query is not needed, rather we have a central function for sql execution which identifies the hub code and suffix it to schema.
  The central function to execute mysql queires is placed as server:executeQuery in mod-server.xqm which expects two paramters as sql query and clientid.
  Client id could be communityId or special domain configured for the community or hub.



4. We have changed the couch-gateway.xqm location to standard db/kwantu-resource/modules collection so please fix the import statement for cojuch-gateway as 

import module namespace couch-gateway="couch-gateway" at "xmldb:exist:///db/kwantu-resource/modules/couch-gateway.xqm";


5. 'httpclient' module is no longer supported. So any calls made using that module needs to be changed using http module. Below are the exaplmes

Sample call for GET/DELETE
-----------------------------
let $url := $server:couchdb-user-server || "/" || $server:sync-user-local-bucket || "_" || $userId
let $encoded := util:base64-encode(concat($server:couchdb-username,":",$server:couchdb-password))
    
let $response := 
    http:send-request(
        <http:request method="GET" href="{$url}">
            <http:header name="Authorization" value="Basic {$encoded}"/>
            <http:header name="Content-Type" value="application/json"/>
        </http:request>
    )
    
let $response-json := parse-json(util:base64-decode($response[2]))


Sample call for POST/PUT
-------------------------
let $url := $server:couchdb-user-server || "/" || $server:sync-user-local-bucket || "_" || $userId
let $encoded := util:base64-encode(concat($server:couchdb-username, ":", $server:couchdb-password))

let $response := 
        http:send-request(
            <http:request method="POST">
                <http:header name="Authorization" value="Basic {$encoded}"/>
                <http:header name="Content-Type" value="application/json"/>
                <http:body method="text" media-type="application/json"/>
            </http:request>, $uri, $packet)

let $response-json := parse-json(util:base64-decode($response[2]))


6. Please discuss the collection structure required for client-specific services with Willem.

7. We need to change the way SQL reports are being generated to handle the hub-schema. We can discuss options when you start with reports.



------------------------------
To fetch the hub code for a supplied identifier (communityId/domain), we can use below xpath

let $hubConf := doc("/db/kwantu-resource/mappings.xml")//entry[nodeUUID eq $identifier or hubUUID eq $identifier or hubDomain eq $identifier or nodeDomain eq $identifier]

Note: This could also be blank for the communities no hub is specified in the settings. In that it should default to "default" hub



-----------------------
exist services used BY UI
---------------------------
/db/kwantu-resource/api/rest/createView.xq
/db/kwantu-resource/api/rest/FixSubProcess.xq
/db/kwantu-resource/api/rest/unlockSubProcess.xq
/db/kwantu-resource/_tools/fixSubprofileLink.xq
/db/kwantu-resource/api/rest/checkCordovaApp.xq
/db/kwantu-resource/api/rest/checkCordovaApp.xq
/db/kwantu-resource/api/rest/getUserManifest.xq
/db/kwantu-resource/api/rest/getConfigManifest.xq
/db/kwantu-resource/api/rest/getProfileManifest.xq
/db/kwantu-resource/api/rest/datasource.xq
/db/kwantu-resource/api/rest/getTaxonomyManifest.xq
/db/kwantu-resource/api/rest/getDependentTaxonomyManifest.xq
/db/kwantu-resource/api/rest/uniqueValidation.xq
/db/kwantu-resource/api/biometric/biometric.xql
/db/kwantu-resource/api/rest/apiGetAttachmentFromCollector.xql
/db/kwantu-resource/api/checkAttachment.xq
/db/kwantu-resource/api/rest/userManagement.xq
/db/kwantu-resource/api/rest/lucene/luceneClouseau.xq
/db/kwantu-resource/api/rest/uploadExcel.xq


